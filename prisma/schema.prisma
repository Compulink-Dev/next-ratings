generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId String    @unique
  firstName   String
  lastName    String
  email       String    @unique
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  imageUrl    String?
  company     Company?  @relation(fields: [companyId], references: [id])
  companyId   String?   @db.ObjectId
  reviews     Review[]
  employee    Employee?
}

enum Role {
  USER
  COMPANY_ADMIN
  PLATFORM_ADMIN
}

model Company {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  website     String?
  logo        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  employees   User[]
  reviews     Review[]
}

model Employee {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @unique @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  bio            String?
  skills         String[]
  experience     Int?
  certifications String[]
  hourlyRate     Float?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  reviews        Review[]
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  rating     Int
  title      String
  content    String
  employeeId String   @db.ObjectId
  employee   Employee @relation(fields: [employeeId], references: [id])
  reviewerId String   @db.ObjectId
  reviewer   User     @relation(fields: [reviewerId], references: [id])
  companyId  String?  @db.ObjectId
  company    Company? @relation(fields: [companyId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  response   String?
}
